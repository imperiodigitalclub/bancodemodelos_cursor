import{c as u,aw as H,aS as A,r as l,j as o,aT as V,aU as G,az as y,aV as W,aW as Y,ay as Z,aX as B,aY as U,aZ as D,a_ as X,a$ as J,b0 as K,a4 as c,a3 as i,b1 as x}from"./index-1d87757c.js";const Ne=u("PenSquare",[["path",{d:"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1qinfi"}],["path",{d:"M18.5 2.5a2.12 2.12 0 0 1 3 3L12 15l-4 1 1-4Z",key:"w2jsv5"}]]),be=u("PlusCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}],["path",{d:"M12 8v8",key:"napkw2"}]]),he=u("Save",[["path",{d:"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z",key:"1owoqh"}],["polyline",{points:"17 21 17 13 7 13 7 21",key:"1md35c"}],["polyline",{points:"7 3 7 8 15 8",key:"8nz8an"}]]);var N="AlertDialog",[Q,we]=H(N,[A]),n=A(),b=e=>{const{__scopeAlertDialog:a,...t}=e,r=n(a);return o.jsx(K,{...r,...t,modal:!0})};b.displayName=N;var ee="AlertDialogTrigger",h=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,s=n(t);return o.jsx(V,{...s,...r,ref:a})});h.displayName=ee;var ae="AlertDialogPortal",w=e=>{const{__scopeAlertDialog:a,...t}=e,r=n(a);return o.jsx(X,{...r,...t})};w.displayName=ae;var te="AlertDialogOverlay",R=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,s=n(t);return o.jsx(G,{...s,...r,ref:a})});R.displayName=te;var d="AlertDialogContent",[oe,re]=Q(d),se=J("AlertDialogContent"),j=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...s}=e,f=n(t),g=l.useRef(null),F=y(a,g),m=l.useRef(null);return o.jsx(W,{contentName:d,titleName:_,docsSlug:"alert-dialog",children:o.jsx(oe,{scope:t,cancelRef:m,children:o.jsxs(Y,{role:"alertdialog",...f,...s,ref:F,onOpenAutoFocus:Z(s.onOpenAutoFocus,p=>{var v;p.preventDefault(),(v=m.current)==null||v.focus({preventScroll:!0})}),onPointerDownOutside:p=>p.preventDefault(),onInteractOutside:p=>p.preventDefault(),children:[o.jsx(se,{children:r}),o.jsx(ie,{contentRef:g})]})})})});j.displayName=d;var _="AlertDialogTitle",S=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,s=n(t);return o.jsx(B,{...s,...r,ref:a})});S.displayName=_;var C="AlertDialogDescription",P=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,s=n(t);return o.jsx(U,{...s,...r,ref:a})});P.displayName=C;var le="AlertDialogAction",T=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,s=n(t);return o.jsx(D,{...s,...r,ref:a})});T.displayName=le;var E="AlertDialogCancel",O=l.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:s}=re(E,t),f=n(t),g=y(a,s);return o.jsx(D,{...f,...r,ref:g})});O.displayName=E;var ie=({contentRef:e})=>{const a=`\`${d}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${d}\` by passing a \`${C}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${d}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ne=b,ce=h,de=w,M=R,$=j,k=T,I=O,z=S,L=P;const Re=ne,je=ce,pe=de,q=c.forwardRef(({className:e,...a},t)=>o.jsx(M,{className:i("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));q.displayName=M.displayName;const ge=c.forwardRef(({className:e,...a},t)=>o.jsxs(pe,{children:[o.jsx(q,{}),o.jsx($,{ref:t,className:i("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));ge.displayName=$.displayName;const fe=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col space-y-2 text-center sm:text-left",e),...a});fe.displayName="AlertDialogHeader";const ue=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});ue.displayName="AlertDialogFooter";const me=c.forwardRef(({className:e,...a},t)=>o.jsx(z,{ref:t,className:i("text-lg font-semibold",e),...a}));me.displayName=z.displayName;const ve=c.forwardRef(({className:e,...a},t)=>o.jsx(L,{ref:t,className:i("text-sm text-muted-foreground",e),...a}));ve.displayName=L.displayName;const Ae=c.forwardRef(({className:e,...a},t)=>o.jsx(k,{ref:t,className:i(x(),e),...a}));Ae.displayName=k.displayName;const ye=c.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:i(x({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));ye.displayName=I.displayName;const De=c.forwardRef(({className:e,...a},t)=>o.jsx("textarea",{className:i("flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",e),ref:t,...a}));De.displayName="Textarea";export{Re as A,be as P,he as S,De as T,Ne as a,je as b,ge as c,fe as d,me as e,ve as f,ue as g,ye as h,Ae as i};
